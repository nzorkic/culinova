//
//  Culinova scaffold v0.2
//  Generated by ChatGPT – June 22 2025
//
//  This single Swift file compiles in Xcode 15.3+ and gives you:
//  • SwiftData models (Recipe, Ingredient, Step, Tag)
//  • A ModelContainer injected via the @main App struct
//  • Basic SwiftUI list + detail editing flow
//  Adjust, split, or extend as you grow the project.
//

import SwiftUI
import SwiftData
import FirebaseCore

@main
struct CulinovaApp: App {
    private let container: ModelContainer
    private let modelContext: ModelContext
    @StateObject private var auth: AuthService
    
    init() {
        FirebaseApp.configure()
        // 1. Build container once
        container = try! ModelContainer(
            for: Recipe.self, Ingredient.self, Step.self, Tag.self,
            Media.self, User.self, Follow.self, AuthCredential.self
        )
        // 2. Create context
        modelContext = ModelContext(container)
        
        // 3. Hand context to AuthService
        AuthService.setContext(modelContext)
        _auth = StateObject(wrappedValue: AuthService.shared)
    }
    
    var body: some Scene {
        WindowGroup {
            if auth.user != nil {         // ← this now updates live
                RecipeListView()
                    .environmentObject(auth)       // handy if children need it
                    .tint(Theme.accent)
            } else {
                LoginView()
                    .environmentObject(auth)
            }
        }
        .modelContainer(container)
    }
}

// MARK: - Previews

#Preview("App") {
    // In‑memory container seeded with a sample recipe for Canvas previews.
    let previewContainer: ModelContainer = {
        let container = try! ModelContainer(
            for: Recipe.self,
            Ingredient.self,
            Step.self,
            Tag.self,
            configurations: ModelConfiguration(isStoredInMemoryOnly: true)
        )
        let ctx = ModelContext(container)
        ctx.insert(Recipe(title: "Preview Pancakes"))
        return container
    }()
    
    NavigationStack {
        RecipeListView()
    }
    .modelContainer(previewContainer)
}
